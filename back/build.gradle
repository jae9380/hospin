plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.hp'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
//    Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

//    JWT Token
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

//    XML 객체 변환 및 마실링
    implementation 'org.springframework:spring-oxm'
    implementation 'com.thoughtworks.xstream:xstream:1.4.20'

//     Spring Batch
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    testImplementation 'org.springframework.batch:spring-batch-test'

//    Database - H-2
    runtimeOnly 'com.h2database:h2'

//    Spring data JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

//    Spring Web
    implementation 'org.springframework.boot:spring-boot-starter-web'

//    Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

//    Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

//    mapstruct // 내부적으로 Lombok을 사용하기 때문에 Lombok 뒤에 작성
    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

//    Dev Tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

//    Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
